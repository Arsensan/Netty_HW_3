На 3 уроке изучили асинхронный фреймворк Netty. Суть фреймоврка в том, что он состоит из пула потоков NioEventLoopGroup
(для клиента 1 поток, для сервера 2 (пул для очереди клиентов и один поток для сервера)). Потом запускаем настройки
 с помощью обекта ServerBootstrap для серева и Bootstrap для клиента. Поток закрывается методом closeFuture().sync();
 который срабатывает только после пригудительной команды от сервера\клиента и дальше срабатывает блок кода:
 finally {
 workerGroup.shutdownGracefully();
 bossGroup.shutdownGracefully();
который закрывает соединенеие.

Ключевой механизм передачи данных в том, что фреймворк состоит из обработчиков, которые добавляются последовательно в конвеер:
public void initChannel(SocketChannel ch) throws Exception {
ch.pipeline().addLast(new DiscardServerHandler());
}
})

Обработчики бывают входящие и исходящие. Первый входящий обработчик всегда принимает байтбуфер из сети, который инициализируют заранее
методом .alloc , обрабаывает его как надо и пуляет его дальше по конвееру в виде ctx. Первый исходящий обработчик перед сетью
тоже в сеть всегда отправялет байтбуфер. Исходящие обработчики отправляют последовательно в сторону сети обработанные данные
игнорируя входящие обработчики. Входящие обработчики работаю по такому же приницпу, только на вход.
---------------------------